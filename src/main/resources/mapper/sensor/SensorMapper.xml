<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glass.dao.sensor.SensorDao">

	<resultMap id="sensor" type="com.glass.entity.sensor.Sensor">
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="sensor_name" property="sensorName" jdbcType="VARCHAR" />
		<association property="accelation" javaType="com.glass.entity.sensor.Accelation">
			<id column="accelation_id"  property="id"  jdbcType="INTEGER"/>
			<result column="accelation_uuid" property="uuid" jdbcType="VARCHAR" />
			<result column="accelation_sensorName" property="sensorName" jdbcType="VARCHAR" />
			<result column="accelation_xvalue" property="xvalue" jdbcType="VARCHAR" />
			<result column="accelation_yvalue" property="yvalue" jdbcType="VARCHAR" />
			<result column="accelation_zvalue" property="zvalue" jdbcType="VARCHAR" />
			<result column="accelation_createTime" property="createTime" jdbcType="VARCHAR" />		
		</association>
		
		<association property="angle" javaType="com.glass.entity.sensor.Angle">
			<id column="angle_id"  property="id"  jdbcType="INTEGER"/>
			<result column="angle_uuid"  property="uuid"  jdbcType="VARCHAR"/>
			<result column="angle_sensorName" property="sensorName" jdbcType="VARCHAR" />
			<result column="angle_value" property="value" jdbcType="VARCHAR" />
			<result column="angle_createTime" property="createTime" jdbcType="VARCHAR" />		
		</association> 
		
		<association property="strain" javaType="com.glass.entity.sensor.Strain">
			<result column="strain_id"  property="id"  jdbcType="INTEGER"/>
			<result column="strain_uuid"  property="uuid"  jdbcType="VARCHAR"/>
			<result column="strain_sensorName" property="sensorName" jdbcType="VARCHAR" />
			<result column="strain_value" property="value" jdbcType="VARCHAR" />
			<result column="strain_createTime" property="createTime" jdbcType="VARCHAR" />		
		</association>
		
		<association property="temperture" javaType="com.glass.entity.sensor.Temperture">
			<result column="temperture_id"  property="id"  jdbcType="INTEGER"/>
			<result column="temperture_uuid"  property="uuid"  jdbcType="VARCHAR"/>
			<result column="temperture_sensorName" property="sensorName" jdbcType="VARCHAR" />
			<result column="temperature_value" property="value" jdbcType="VARCHAR" />
			<result column="temperature_createTime" property="createTime" jdbcType="VARCHAR" />		
		</association>
		
		<association property="gyro" javaType="com.glass.entity.sensor.Gyro">
			<result column="gyro_id"  property="id"  jdbcType="INTEGER"/>
			<result column="gyro_uuid"  property="uuid"  jdbcType="VARCHAR"/>
			<result column="gyro_sensorName" property="sensorName" jdbcType="VARCHAR" />
			<result column="gyro_xvalue" property="xvalue" jdbcType="VARCHAR" />
			<result column="gyro_yvalue" property="yvalue" jdbcType="VARCHAR" />
			<result column="gyro_zvalue" property="zvalue" jdbcType="VARCHAR" />
			<result column="gyro_createTime" property="createTime" jdbcType="VARCHAR" />		
		</association> 
	</resultMap>
	
	<select id="getSensorList" resultMap="sensor" parameterType="com.glass.entity.sensor.Sensor">
		select a.uuid as uuid , a.sensor_name as sensor_name , a.id as accelation_id , a.uuid as accelation_uuid , a.sensor_name as accelation_sensorName , a.x_value as accelation_xvalue , a.y_value as accelation_yvalue , a.z_value as accelation_zvalue , a.create_time as accelation_createTime,
		an.id as angle_id , an.uuid as angle_uuid , an.sensor_name as angle_sensorName ,an.value as angle_value , an.create_time as angle_createTime , 
		st.id as strain_id , st.uuid as strain_uuid , st.sensor_name as strain_sensorName ,st.value as strain_value , st.create_time as strain_createTime,
		t.id as temperature_id , t.uuid as temperature_uuid , t.sensor_name as temperature_sensorName , t.value as temperature_value , t.create_time as temperature_createTime,
		g.id as gryo_id , g.uuid as gryo_uuid , g.sensor_name as gryo_sensorName ,g.x_value as gyro_xvalue , g.y_value as gyro_yvalue , g.z_value as gyro_zvalue , g.create_time as gryo_createTime
		from sensor_accelation a 
		left join sensor_angle an on a.uuid = an.uuid 
		left join sensor_strain st on a.uuid = st.uuid
		left join sensor_temperature t on a.uuid = t.uuid
		left join sensor_gyro g on a.uuid = g.uuid
		<where>
			<if test="sensorName != null and  sensorName != ''">
				 a.sensor_name=#{sensorName}
			</if>
		</where>
	</select>
	

	
	
</mapper>